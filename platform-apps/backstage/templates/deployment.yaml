kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.name }}
  labels:
    backstage.io/kubernetes-id: {{ .Values.name }}
    app: {{ .Values.name }}
spec:
  replicas: {{ .Values.backstage.instances }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.name }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.name }}
        app.kubernetes.io/name: {{ .Values.name }}
        backstage.io/kubernetes-id: {{ .Values.name }}
      annotations:
    spec:
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: backstage-backend
          command:
            - node
            - packages/backend
          env:
            - name: APP_CONFIG_app_baseUrl
              value: https://{{ .Values.backstage.hostname }}
            - name: APP_CONFIG_backend_baseUrl
              value: https://{{ .Values.backstage.hostname }}
            - name: APP_CONFIG_backend_cors_origin
              value: https://{{ .Values.backstage.hostname }}
          ports:
            - name: backend
              containerPort: 7007
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          envFrom:
            - secretRef:
                name: {{ .Values.name }}-secret
          image: >-
            {{ .Values.backstage.registry }}/sx-backstage:latest
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
